<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee
                      http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
         version="3.1" metadata-complete="true">
  <!-- 如果是用mvn命令生成的xml，需要修改servlet版本为3.1 -->
  <!-- 配置SpringMVC前端控制器DispatcherServlet -->
  <servlet>
    <servlet-name>dispatcher</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <!-- 配置springMVC需要加载的配置文件
        spring-dao.xml,spring-service.xml,spring-web.xml
        Mybatis - > spring -> springmvc
     -->
    <init-param>
      <param-name>contextConfigLocation</param-name>
      <param-value>classpath:spring/spring-*.xml</param-value>
    </init-param>
  </servlet>
  <servlet-mapping>
    <servlet-name>dispatcher</servlet-name>
    <!--
    第一种：*.action  访问以.action结尾的url由DispatcherServlet进行解析
    第二种：/  所有访问的地址都由DispatcherServlet进行解析，对于静态文件的解析需要配置不让
           DispatcherServlet进行解析，使用此种方式可以实现RESTful风格的url
    第三种：/*  这种配置不对，使用这种配置，最终要转发到一个jsp页面时，仍然会由DispatcherServlet解
           析jsp地址，不能根据jsp页面找到hangdler，会报错
    -->
    <url-pattern>*.action</url-pattern>
  </servlet-mapping>
</web-app>
